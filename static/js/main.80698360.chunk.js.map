{"version":3,"sources":["data/chapters lazy /^/.//.*/.json$/ groupOptions: {} namespace object","components/Verse/Verse.tsx","components/Verse/index.tsx","components/ChapterContext.tsx","components/Carousel.tsx","components/util.ts","theme.ts","components/NavBar.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","Verse","text","as","py","fontFamily","textAlign","fontWeight","whiteSpace","Translation","Commentary","ChapterContext","createContext","useChapterContext","useContext","ChapterProvider","children","useState","chapter","setChapter","Provider","value","Carousel","allVerses","setAllVerses","useEffect","default","getVerses","data","length","AnotherW","useSpringCarousel","items","v","i","renderItem","ContentMemo","carouselFragment","useListenToCustomEvent","event","eventName","window","scrollTo","SliderItem","rest","w","sx","touchAction","alignItems","alignContent","SliderWrapper","borderRadius","p","m","boxShadow","Content","verse","overflow","translation","commentary","memo","theme","extendTheme","config","initialColorMode","useSystemColorMode","fonts","body","NavBar","options","Array","_","bg","useColorModeValue","px","h","justifyContent","spacing","onChange","target","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.80698360.chunk.js","sourcesContent":["var map = {\n\t\"./chapter_1.json\": [\n\t\t111,\n\t\t4\n\t],\n\t\"./chapter_10.json\": [\n\t\t112,\n\t\t5\n\t],\n\t\"./chapter_11.json\": [\n\t\t113,\n\t\t6\n\t],\n\t\"./chapter_12.json\": [\n\t\t114,\n\t\t7\n\t],\n\t\"./chapter_13.json\": [\n\t\t115,\n\t\t8\n\t],\n\t\"./chapter_14.json\": [\n\t\t116,\n\t\t9\n\t],\n\t\"./chapter_15.json\": [\n\t\t117,\n\t\t10\n\t],\n\t\"./chapter_16.json\": [\n\t\t118,\n\t\t11\n\t],\n\t\"./chapter_17.json\": [\n\t\t119,\n\t\t12\n\t],\n\t\"./chapter_18.json\": [\n\t\t120,\n\t\t13\n\t],\n\t\"./chapter_2.json\": [\n\t\t121,\n\t\t14\n\t],\n\t\"./chapter_3.json\": [\n\t\t122,\n\t\t15\n\t],\n\t\"./chapter_4.json\": [\n\t\t123,\n\t\t16\n\t],\n\t\"./chapter_5.json\": [\n\t\t124,\n\t\t17\n\t],\n\t\"./chapter_6.json\": [\n\t\t125,\n\t\t18\n\t],\n\t\"./chapter_7.json\": [\n\t\t126,\n\t\t19\n\t],\n\t\"./chapter_8.json\": [\n\t\t127,\n\t\t20\n\t],\n\t\"./chapter_9.json\": [\n\t\t128,\n\t\t21\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 108;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\nimport { Box, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  text: string;\n};\n\nconst Verse = ({ text }: Props) => {\n  return (\n    <Box as=\"section\" py={2}>\n      <Text\n        fontFamily=\"'Gotu', sans-serif\"\n        textAlign=\"center\"\n        fontWeight=\"semibold\"\n        whiteSpace=\"pre-wrap\"\n      >\n        {text}\n      </Text>\n    </Box>\n  );\n};\n\nconst Translation = ({ text }: Props) => {\n  return (\n    <Box as=\"section\" py={2} whiteSpace=\"pre-wrap\">\n      {text}\n    </Box>\n  );\n};\n\nconst Commentary = ({ text }: Props) => {\n  return (\n    <Box as=\"section\" py={2} whiteSpace=\"pre-wrap\">\n      {text}\n    </Box>\n  );\n};\n\nVerse.Translation = Translation;\nVerse.Commentary = Commentary;\n\nexport default Verse;\n","import Verse from \"./Verse\";\n\nexport default Verse;\n","import { useState } from \"react\";\nimport { createContext, useContext } from \"react\";\n\nconst ChapterContext = createContext([] as any);\n\nexport const useChapterContext = () => useContext(ChapterContext);\n\nexport const ChapterProvider = ({ children }: any) => {\n  const [chapter, setChapter] = useState(\"chapter_1\");\n\n  return (\n    <ChapterContext.Provider value={[chapter, setChapter]}>\n      {children}\n    </ChapterContext.Provider>\n  );\n};\n","import { useSpringCarousel } from \"react-spring-carousel-js\";\nimport { Box, Divider, Flex } from \"@chakra-ui/react\";\nimport Verse from \"./Verse\";\nimport { getVerses } from \"./util\";\nimport { memo, useEffect, useState } from \"react\";\nimport { useChapterContext } from \"./ChapterContext\";\n\nconst Carousel = () => {\n  const [allVerses, setAllVerses] = useState([]);\n  const [chapter] = useChapterContext();\n\n  useEffect(() => {\n    getVerses(chapter).then((data) => setAllVerses(data as any));\n  }, [chapter]);\n\n  if (allVerses.length === 0) return null;\n  return <AnotherW allVerses={allVerses} />;\n};\n\nexport default Carousel;\n\nfunction AnotherW({ allVerses }: any) {\n  const { carouselFragment, useListenToCustomEvent } = useSpringCarousel({\n    items: allVerses.map((v: any, i: any) => ({\n      id: `${i}`,\n      renderItem: (\n        <SliderItem>\n          <ContentMemo id={allVerses[i]} />\n        </SliderItem>\n      ),\n    })),\n  });\n\n  useListenToCustomEvent((event) => {\n    if (event.eventName === \"onSlideStartChange\") {\n      window.scrollTo(0, 0);\n    }\n  });\n\n  return <SliderWrapper>{carouselFragment}</SliderWrapper>;\n}\n\nconst SliderItem = ({ children, ...rest }: any) => {\n  return (\n    <Flex\n      // h=\"100%\"\n      w=\"100%\"\n      sx={{ touchAction: \"none\" }}\n      // bg=\"gray\"\n      alignItems=\"flex-start\"\n      alignContent=\"flex-start\"\n      {...rest}\n    >\n      {children}\n    </Flex>\n  );\n};\n\nconst SliderWrapper = ({ children }: any) => {\n  return (\n    <Box\n      borderRadius={12}\n      p={2}\n      m={2}\n      boxShadow=\"md\"\n      // bg=\"blue\"\n      // h=\"100%\"\n      // h=\"200\"\n    >\n      {children}\n    </Box>\n  );\n};\n\nconst Content = ({ id }: any) => {\n  const verse = id;\n\n  return (\n    <Box overflow=\"auto\" sx={{ touchAction: \"pan-y\" }}>\n      <Box py={2} textAlign=\"center\">\n        अध्याय 1, श्लोक 1\n      </Box>\n      <Divider />\n      <Verse text={verse.text} />\n      <Divider />\n      <Verse.Translation text={verse.translation} />\n      <Divider />\n      <Verse.Commentary text={verse.commentary} />\n    </Box>\n  );\n};\n\nconst ContentMemo = memo(Content);\n","type Verse = {\n  text: string;\n  translation: string;\n  commentary: string;\n};\n\nexport const getVerses = (chapter: string): Promise<Verse[]> => {\n  return import(`../data/chapters/${chapter}.json`).then(\n    (module) => module.default\n  );\n};\n","import { extendTheme, ThemeConfig } from \"@chakra-ui/react\";\n\nconst config: ThemeConfig = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: false,\n};\n\nconst theme = extendTheme({\n  config,\n  fonts: {\n    body: \"Poppins,sans-serif\",\n  },\n});\nexport default theme;\n","import { Box, Flex, HStack, useColorModeValue, Select } from \"@chakra-ui/react\";\nimport { useChapterContext } from \"./ChapterContext\";\n\nexport default function NavBar({ children }: any) {\n  const [chapter, setChapter] = useChapterContext();\n  const options = [...Array(18)].map((_, i) => (\n    <option key={i} value={`chapter_${i + 1}`}>\n      अध्याय {i + 1}\n    </option>\n  ));\n  return (\n    <>\n      <Box bg={useColorModeValue(\"gray.100\", \"gray.900\")} px={4}>\n        <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\n          <HStack spacing={8} alignItems={\"center\"}>\n            <Box>Logo</Box>\n          </HStack>\n          <Flex alignItems={\"center\"}>\n            <Select\n              value={chapter}\n              onChange={(e) => setChapter(e.target.value)}\n            >\n              {options}\n            </Select>\n          </Flex>\n        </Flex>\n      </Box>\n      {children}\n    </>\n  );\n}\n","import Carousel from \"./components/Carousel\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport NavBar from \"./components/NavBar\";\nimport { ChapterProvider } from \"./components/ChapterContext\";\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <ChapterProvider>\n        <NavBar>\n          <Carousel />\n        </NavBar>\n      </ChapterProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}