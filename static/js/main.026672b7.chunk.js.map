{"version":3,"sources":["data/chapters lazy /^/.//.*/.ts$/ groupOptions: {} namespace object","components/Verse/Verse.tsx","components/Verse/index.tsx","components/ChapterContext.tsx","components/Carousel.tsx","components/util.ts","theme.ts","components/NavBar.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Verse","text","as","py","fontFamily","textAlign","fontWeight","whiteSpace","Translation","Commentary","ChapterContext","createContext","useChapterContext","useContext","ChapterProvider","children","useReducer","chapterReducer","chapter","verse","initial","JSON","parse","window","localStorage","getItem","state","dispatch","useEffect","setItem","stringify","value","verseCount","Provider","action","type","Carousel","useState","allVerses","setAllVerses","default","getVerses","data","length","setSW","className","autoHeight","initialSlide","onSlideChange","s","activeIndex","onSwiper","swiper","v","i","ContentMemo","Content","overflow","sx","touchAction","borderRadius","p","m","boxShadow","translation","commentary","memo","theme","extendTheme","config","initialColorMode","useSystemColorMode","fonts","body","NavBar","chapters","Array","_","verses","bg","useColorModeValue","px","h","alignItems","justifyContent","spacing","onChange","target","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.026672b7.chunk.js","sourcesContent":["var map = {\n\t\"./chapter_1.ts\": [\n\t\t90,\n\t\t3\n\t],\n\t\"./chapter_10.ts\": [\n\t\t91,\n\t\t4\n\t],\n\t\"./chapter_11.ts\": [\n\t\t92,\n\t\t5\n\t],\n\t\"./chapter_12.ts\": [\n\t\t93,\n\t\t6\n\t],\n\t\"./chapter_13.ts\": [\n\t\t94,\n\t\t7\n\t],\n\t\"./chapter_14.ts\": [\n\t\t95,\n\t\t8\n\t],\n\t\"./chapter_15.ts\": [\n\t\t96,\n\t\t9\n\t],\n\t\"./chapter_16.ts\": [\n\t\t97,\n\t\t10\n\t],\n\t\"./chapter_17.ts\": [\n\t\t98,\n\t\t11\n\t],\n\t\"./chapter_18.ts\": [\n\t\t99,\n\t\t12\n\t],\n\t\"./chapter_2.ts\": [\n\t\t100,\n\t\t13\n\t],\n\t\"./chapter_3.ts\": [\n\t\t101,\n\t\t14\n\t],\n\t\"./chapter_4.ts\": [\n\t\t102,\n\t\t15\n\t],\n\t\"./chapter_5.ts\": [\n\t\t103,\n\t\t16\n\t],\n\t\"./chapter_6.ts\": [\n\t\t104,\n\t\t17\n\t],\n\t\"./chapter_7.ts\": [\n\t\t105,\n\t\t18\n\t],\n\t\"./chapter_8.ts\": [\n\t\t106,\n\t\t19\n\t],\n\t\"./chapter_9.ts\": [\n\t\t107,\n\t\t20\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 86;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\nimport { Box, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n  text: string;\n};\n\nconst Verse = ({ text }: Props) => {\n  return (\n    <Box as=\"section\" py={2}>\n      <Text\n        fontFamily=\"'Gotu', sans-serif\"\n        textAlign=\"center\"\n        fontWeight=\"semibold\"\n        whiteSpace=\"pre-wrap\"\n      >\n        {text}\n      </Text>\n    </Box>\n  );\n};\n\nconst Translation = ({ text }: Props) => {\n  return (\n    <Box as=\"section\" py={2} whiteSpace=\"pre-wrap\">\n      {text}\n    </Box>\n  );\n};\n\nconst Commentary = ({ text }: Props) => {\n  return (\n    <Box as=\"section\" py={2} whiteSpace=\"pre-wrap\">\n      {text}\n    </Box>\n  );\n};\n\nVerse.Translation = Translation;\nVerse.Commentary = Commentary;\n\nexport default Verse;\n","import Verse from \"./Verse\";\n\nexport default Verse;\n","import { useReducer } from \"react\";\nimport { useEffect } from \"react\";\nimport { createContext, useContext } from \"react\";\n\nconst ChapterContext = createContext({} as any);\n\nexport const useChapterContext = () => useContext(ChapterContext);\n\nexport const ChapterProvider = ({ children }: any) => {\n  const [state, dispatch] = useReducer(\n    chapterReducer,\n    {\n      chapter: \"chapter_1\",\n      verse: 0,\n    },\n\n    (initial) =>\n      JSON.parse(window.localStorage.getItem(\"chapter\") as any) || initial\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem(\"chapter\", JSON.stringify(state));\n  }, [state]);\n\n  const value = {\n    chapter: state.chapter,\n    verseCount: state.verseCount,\n    verse: state.verse,\n    dispatch,\n  };\n\n  return (\n    <ChapterContext.Provider value={value}>{children}</ChapterContext.Provider>\n  );\n};\n\nfunction chapterReducer(state: any, action: any) {\n  switch (action.type) {\n    case \"changeChapter\":\n      return {\n        ...state,\n        chapter: action.chapter,\n        verse: 0,\n      };\n    case \"loadChapter\":\n      return { ...state, verseCount: action.verseCount };\n    case \"changeVerse\":\n      return { ...state, verse: action.verse };\n\n    default:\n      break;\n  }\n}\n","import { Box, Divider } from \"@chakra-ui/react\";\nimport Verse from \"./Verse\";\nimport { getVerses, Verse as VerseType } from \"./util\";\nimport { memo, useEffect, useState } from \"react\";\nimport { useChapterContext } from \"./ChapterContext\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper.min.css\";\n\nconst Carousel = () => {\n  const [allVerses, setAllVerses] = useState<VerseType[]>([]);\n  const { chapter, verse, dispatch } = useChapterContext();\n\n  useEffect(() => {\n    getVerses(chapter).then((data) => {\n      setAllVerses(data);\n      dispatch({ type: \"loadChapter\", verseCount: data.length });\n    });\n  }, [chapter]);\n  const [sw, setSW] = useState();\n\n  return (\n    <Swiper\n      className=\"mySwiper\"\n      autoHeight={true}\n      initialSlide={verse}\n      onSlideChange={(s) => {\n        dispatch({ type: \"changeVerse\", verse: s.activeIndex });\n        // console.log((sw as any)?.slideTo);\n      }}\n      onSwiper={(swiper) => setSW(swiper as any)}\n    >\n      {allVerses.map((v, i) => (\n        <SwiperSlide key={i}>\n          <ContentMemo verse={v} />\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  );\n};\n\nexport default Carousel;\n\nconst Content = ({ verse }: { verse: VerseType }) => {\n  return (\n    <Box\n      overflow=\"auto\"\n      sx={{ touchAction: \"pan-y\" }}\n      borderRadius={12}\n      p={2}\n      m={2}\n      boxShadow=\"2xl\"\n    >\n      <Verse text={verse.text} />\n      <Divider />\n      <Verse.Translation text={verse.translation} />\n      <Divider />\n      <Verse.Commentary text={verse.commentary} />\n    </Box>\n  );\n};\n\nconst ContentMemo = memo(Content);\n","export type Verse = {\n  text: string;\n  translation: string;\n  commentary: string;\n};\n\nexport const getVerses = (chapter: string): Promise<Verse[]> => {\n  return import(`../data/chapters/${chapter}.ts`).then(\n    (module) => module.default\n  );\n};\n","import { extendTheme, ThemeConfig } from \"@chakra-ui/react\";\n\nconst config: ThemeConfig = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: false,\n};\n\nconst theme = extendTheme({\n  config,\n  fonts: {\n    body: \"Poppins,sans-serif\",\n  },\n});\nexport default theme;\n","import { Box, Flex, HStack, useColorModeValue, Select } from \"@chakra-ui/react\";\nimport { useChapterContext } from \"./ChapterContext\";\n\nexport default function NavBar({ children }: any) {\n  const { chapter, verseCount, verse, dispatch } = useChapterContext();\n  const chapters = [...Array(18)].map((_, i) => (\n    <option key={i} value={`chapter_${i + 1}`}>\n      अध्याय {i + 1}\n    </option>\n  ));\n  const verses = [...Array(verseCount)].map((_, i) => (\n    <option key={i} value={i}>\n      श्लोक {i + 1}\n    </option>\n  ));\n  return (\n    <>\n      <Box bg={useColorModeValue(\"gray.100\", \"gray.900\")} px={4}>\n        <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\n          <HStack spacing={8} alignItems={\"center\"}>\n            <Box>Logo</Box>\n          </HStack>\n          <Flex alignItems={\"center\"}>\n            <Select\n              value={chapter}\n              onChange={(e) =>\n                dispatch({ type: \"changeChapter\", chapter: e.target.value })\n              }\n            >\n              {chapters}\n            </Select>\n            <Select\n              value={verse}\n              onChange={(e) =>\n                dispatch({ type: \"changeVerse\", verse: e.target.value })\n              }\n            >\n              {verses}\n            </Select>\n          </Flex>\n        </Flex>\n      </Box>\n      {children}\n    </>\n  );\n}\n","import Carousel from \"./components/Carousel\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport NavBar from \"./components/NavBar\";\nimport { ChapterProvider } from \"./components/ChapterContext\";\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <ChapterProvider>\n        <NavBar>\n          <Carousel />\n        </NavBar>\n      </ChapterProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}